import math
from array import array

class Vector:
    """ Class represetning a multidimensional vector """
    typecode = 'd'

    def __init__(self, components):
        self._components = array(self.typecode, components)

    def __getitem__(self, index):
        """ That's super easy, as we get to reuse the __getitem-- of array! """
        self._componets[index] = new_value

    def __len__(self):
        """ Did I just write that we like to delegate? """
        return len(self._components)

    def __repr__(self):
        components = str(self._components)
        components = components[components.find('['): -1]
        class_name = type(self).__name__
        return '{}({})'.format(class_name, components)


v = Vector([5., 3., -1, 8.])

print(len(v))

print(v[0], v[1])

v[1] = 10.
print(v)
print(v[9]) # This will generate an error!

